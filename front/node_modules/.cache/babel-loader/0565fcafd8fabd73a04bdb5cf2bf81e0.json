{"ast":null,"code":"var _jsxFileName = \"/Users/project/klnet.owner.weidong/front/src/views/Forms/ValidationForms.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport Card from \"components/Card/Card.jsx\";\nimport Checkbox from \"components/CustomCheckbox/CustomCheckbox.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nclass ValidationForms extends Component {\n  constructor(props) {\n    super(props);\n    this.vForm = this.refs.vForm;\n    this.state = {\n      // Register\n      email: \"\",\n      password: \"\",\n      cfpassword: \"\",\n      emailError: null,\n      passwordError: null,\n      cfpasswordError: null,\n      /// Login\n      emailLogin: \"\",\n      emailErrorLogin: null,\n      passwordLogin: \"\",\n      passwordErrorLogin: null,\n      // Type\n      type_text: \"\",\n      type_textError: null,\n      type_email: \"\",\n      type_emailError: null,\n      type_number: \"\",\n      type_numberError: null,\n      type_url: \"\",\n      type_urlError: null,\n      type_source: \"\",\n      type_sourceError: null,\n      type_destination: \"\",\n      type_destinationError: null\n    };\n  }\n\n  handleEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(event.target.value) === false ? this.setState({\n      emailError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, \"Email is required and format should be \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 54\n        }\n      }, \"john@doe.com\"), \".\")\n    }) : this.setState({\n      emailError: null\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n    event.target.value.length < 6 ? this.setState({\n      passwordError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, \"You must enter a password of at least 6 characters.\")\n    }) : this.setState({\n      passwordError: null\n    });\n  }\n\n  handleCfPasswordChange(event) {\n    this.setState({\n      cfpassword: event.target.value\n    });\n    event.target.value !== this.state.password ? this.setState({\n      cfpasswordError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, \"Passwords do not match.\")\n    }) : this.setState({\n      cfpasswordError: null\n    });\n  }\n\n  handleRegisterSubmit() {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(this.state.email) === false ? this.setState({\n      emailError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, \"Email is required and format should be \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 54\n        }\n      }, \"john@doe.com\"), \".\")\n    }) : this.setState({\n      emailError: null\n    });\n    this.state.password.length < 6 ? this.setState({\n      passwordError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, \"You must enter a password of at least 6 characters.\")\n    }) : this.setState({\n      passwordError: null\n    });\n    this.state.cfpassword !== this.state.password ? this.setState({\n      cfpasswordError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, \"Passwords do not match.\")\n    }) : this.setState({\n      cfpasswordError: null\n    });\n  }\n\n  handleLoginEmail(event) {\n    this.setState({\n      emailLogin: event.target.value\n    });\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(event.target.value) === false ? this.setState({\n      emailErrorLogin: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, \"Email is required and format should be \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 54\n        }\n      }, \"john@doe.com\"), \".\")\n    }) : this.setState({\n      emailErrorLogin: null\n    });\n  }\n\n  handleLoginPassword(event) {\n    this.setState({\n      passwordLogin: event.target.value\n    });\n    event.target.value.length < 6 ? this.setState({\n      passwordErrorLogin: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, \"You must enter a password of at least 6 characters.\")\n    }) : this.setState({\n      passwordErrorLogin: null\n    });\n  }\n\n  handleLoginSubmit() {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(this.state.emailLogin) === false ? this.setState({\n      emailErrorLogin: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, \"Email is required and format should be \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 54\n        }\n      }, \"john@doe.com\"), \".\")\n    }) : this.setState({\n      emailErrorLogin: null\n    });\n    this.state.passwordLogin < 6 ? this.setState({\n      passwordErrorLogin: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, \"You must enter a password of at least 6 characters.\")\n    }) : this.setState({\n      passwordErrorLogin: null\n    });\n  }\n\n  handleTypeValidation() {\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    emailRex.test(this.state.type_email) === false ? this.setState({\n      type_emailError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, \"Email is required and format should be \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 54\n        }\n      }, \"john@doe.com\"), \".\")\n    }) : this.setState({\n      type_emailError: null\n    });\n    this.state.type_text === \"\" ? this.setState({\n      type_textError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, \"Text is required.\")\n    }) : this.setState({\n      type_textError: null\n    });\n    var digitRex = /^\\d+$/;\n    digitRex.test(this.state.type_number) === false ? this.setState({\n      type_numberError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, \"type_number has to be a number.\")\n    }) : this.setState({\n      type_numberError: null\n    });\n    var urlRex = /[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/gi;\n    urlRex.test(this.state.type_url) ? this.setState({\n      type_urlError: null\n    }) : this.setState({\n      type_urlError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, \"Must be a valid URL!\")\n    });\n    this.state.type_source === \"\" ? this.setState({\n      type_sourceError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, \"IdSource is required\")\n    }) : this.setState({\n      type_sourceError: null\n    });\n    this.state.type_source === this.state.type_destination ? this.setState({\n      type_destinationError: null\n    }) : this.setState({\n      type_destinationError: /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, \"IdSource mismatch!\")\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Register Form\",\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ControlLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, \"Email adress: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 41\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        name: \"email\",\n        onChange: event => this.handleEmailChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }), this.state.emailError), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ControlLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }\n      }, \"Password: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 37\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(FormControl, {\n        type: \"password\",\n        name: \"password\",\n        autoComplete: \"off\",\n        onChange: event => this.handlePasswordChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }), this.state.passwordError), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ControlLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }\n      }, \"Confirm password: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 45\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(FormControl, {\n        type: \"password\",\n        name: \"cfpassword\",\n        autoComplete: \"off\",\n        onChange: event => this.handleCfPasswordChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }\n      }), this.state.cfpasswordError), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, \"*\"), \" Required fields\"), /*#__PURE__*/React.createElement(Button, {\n        bsStyle: \"info\",\n        fill: true,\n        pullRight: true,\n        onClick: this.handleRegisterSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 23\n        }\n      }, \"Register\")),\n      legend: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        number: 1,\n        label: \"Subscribe to newsletter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 23\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      textCenter: true,\n      title: \"Login Form\",\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ControlLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }\n      }, \"Email adress: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 41\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        name: \"email\",\n        onChange: event => this.handleLoginEmail(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }\n      }), this.state.emailErrorLogin), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ControlLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }\n      }, \"Password: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 37\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(FormControl, {\n        type: \"password\",\n        name: \"password\",\n        autoComplete: \"off\",\n        onChange: event => this.handleLoginPassword(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }\n      }), this.state.passwordErrorLogin), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      }, \"*\"), \" Required fields\")),\n      ftTextCenter: true,\n      legend: /*#__PURE__*/React.createElement(Button, {\n        bsStyle: \"info\",\n        fill: true,\n        wd: true,\n        onClick: this.handleLoginSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }\n      }, \"Login\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: /*#__PURE__*/React.createElement(\"legend\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 26\n        }\n      }, \"Type Validation\"),\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"formHorizontalRequiredText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        componentClass: ControlLabel,\n        sm: 2,\n        smOffset: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }\n      }, \"Required text\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        name: \"type_text\",\n        onChange: event => {\n          this.setState({\n            type_text: event.target.value\n          });\n          event.target.value === \"\" ? this.setState({\n            type_textError: /*#__PURE__*/React.createElement(\"small\", {\n              className: \"text-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 39\n              }\n            }, \"Text is required.\")\n          }) : this.setState({\n            type_textError: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 27\n        }\n      }), this.state.type_textError)), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"formHorizontalEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        componentClass: ControlLabel,\n        sm: 2,\n        smOffset: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"email\",\n        name: \"type_email\",\n        onChange: event => {\n          this.setState({\n            type_email: event.target.value\n          });\n          var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          emailRex.test(event.target.value) === false ? this.setState({\n            type_emailError: /*#__PURE__*/React.createElement(\"small\", {\n              className: \"text-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 39\n              }\n            }, \"Email is required and format should be\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 41\n              }\n            }, \"john@doe.com\"), \".\")\n          }) : this.setState({\n            type_emailError: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 27\n        }\n      }), this.state.type_emailError)), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"formHorizontalNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        componentClass: ControlLabel,\n        sm: 2,\n        smOffset: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }\n      }, \"Number\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"number\",\n        name: \"type_number\",\n        onChange: event => {\n          this.setState({\n            type_number: event.target.value\n          });\n          var digitRex = /^\\d+$/;\n          digitRex.test(event.target.value) === false ? this.setState({\n            type_numberError: /*#__PURE__*/React.createElement(\"small\", {\n              className: \"text-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 39\n              }\n            }, \"type_number has to be a number.\")\n          }) : this.setState({\n            type_numberError: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 27\n        }\n      }), this.state.type_numberError)), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"formHorizontalURL\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        componentClass: ControlLabel,\n        sm: 2,\n        smOffset: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 25\n        }\n      }, \"URL\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        name: \"type_url\",\n        onChange: event => {\n          this.setState({\n            type_url: event.target.value\n          });\n          var urlRex = /[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/gi;\n          urlRex.test(event.target.value) ? this.setState({\n            type_urlError: null\n          }) : this.setState({\n            type_urlError: /*#__PURE__*/React.createElement(\"small\", {\n              className: \"text-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 39\n              }\n            }, \"Must be a valid URL!\")\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 27\n        }\n      }), this.state.type_urlError)), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        componentClass: ControlLabel,\n        sm: 2,\n        smOffset: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 25\n        }\n      }, \"Equal to\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        name: \"type_source\",\n        placeholder: \"idSource\",\n        onChange: event => {\n          this.setState({\n            type_source: event.target.value\n          });\n          event.target.value === \"\" ? this.setState({\n            type_sourceError: /*#__PURE__*/React.createElement(\"small\", {\n              className: \"text-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 39\n              }\n            }, \"IdSource is required\")\n          }) : this.setState({\n            type_sourceError: null\n          });\n          this.state.type_destination === event.target.value ? this.setState({\n            type_destinationError: null\n          }) : this.setState({\n            type_destinationError: /*#__PURE__*/React.createElement(\"small\", {\n              className: \"text-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 39\n              }\n            }, \"IdSource mismatch!\")\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 27\n        }\n      }), this.state.type_sourceError), /*#__PURE__*/React.createElement(Col, {\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        name: \"type_destination\",\n        placeholder: \"idDestination\",\n        onChange: event => {\n          this.setState({\n            type_destination: event.target.value\n          });\n          this.state.type_source === event.target.value ? this.setState({\n            type_destinationError: null\n          }) : this.setState({\n            type_destinationError: /*#__PURE__*/React.createElement(\"small\", {\n              className: \"text-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 39\n              }\n            }, \"IdSource mismatch!\")\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 27\n        }\n      }), this.state.type_destinationError))),\n      ftTextCenter: true,\n      legend: /*#__PURE__*/React.createElement(Button, {\n        fill: true,\n        bsStyle: \"info\",\n        onClick: this.handleTypeValidation.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }\n      }, \"Validate Inputs\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default ValidationForms;","map":{"version":3,"sources":["/Users/project/klnet.owner.weidong/front/src/views/Forms/ValidationForms.jsx"],"names":["React","Component","Grid","Row","Col","Form","FormGroup","FormControl","ControlLabel","Card","Checkbox","Button","ValidationForms","constructor","props","vForm","refs","state","email","password","cfpassword","emailError","passwordError","cfpasswordError","emailLogin","emailErrorLogin","passwordLogin","passwordErrorLogin","type_text","type_textError","type_email","type_emailError","type_number","type_numberError","type_url","type_urlError","type_source","type_sourceError","type_destination","type_destinationError","handleEmailChange","event","setState","target","value","re","test","handlePasswordChange","length","handleCfPasswordChange","handleRegisterSubmit","handleLoginEmail","handleLoginPassword","handleLoginSubmit","handleTypeValidation","emailRex","digitRex","urlRex","render","bind"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\n\nimport Card from \"components/Card/Card.jsx\";\n\nimport Checkbox from \"components/CustomCheckbox/CustomCheckbox.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nclass ValidationForms extends Component {\n  constructor(props) {\n    super(props);\n    this.vForm = this.refs.vForm;\n    this.state = {\n      // Register\n      email: \"\",\n      password: \"\",\n      cfpassword: \"\",\n      emailError: null,\n      passwordError: null,\n      cfpasswordError: null,\n      /// Login\n      emailLogin: \"\",\n      emailErrorLogin: null,\n      passwordLogin: \"\",\n      passwordErrorLogin: null,\n      // Type\n      type_text: \"\",\n      type_textError: null,\n      type_email: \"\",\n      type_emailError: null,\n      type_number: \"\",\n      type_numberError: null,\n      type_url: \"\",\n      type_urlError: null,\n      type_source: \"\",\n      type_sourceError: null,\n      type_destination: \"\",\n      type_destinationError: null\n    };\n  }\n  handleEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(event.target.value) === false\n      ? this.setState({\n          emailError: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ emailError: null });\n  }\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n    event.target.value.length < 6\n      ? this.setState({\n          passwordError: (\n            <small className=\"text-danger\">\n              You must enter a password of at least 6 characters.\n            </small>\n          )\n        })\n      : this.setState({ passwordError: null });\n  }\n  handleCfPasswordChange(event) {\n    this.setState({\n      cfpassword: event.target.value\n    });\n    event.target.value !== this.state.password\n      ? this.setState({\n          cfpasswordError: (\n            <small className=\"text-danger\">Passwords do not match.</small>\n          )\n        })\n      : this.setState({ cfpasswordError: null });\n  }\n  handleRegisterSubmit() {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(this.state.email) === false\n      ? this.setState({\n          emailError: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ emailError: null });\n    this.state.password.length < 6\n      ? this.setState({\n          passwordError: (\n            <small className=\"text-danger\">\n              You must enter a password of at least 6 characters.\n            </small>\n          )\n        })\n      : this.setState({ passwordError: null });\n    this.state.cfpassword !== this.state.password\n      ? this.setState({\n          cfpasswordError: (\n            <small className=\"text-danger\">Passwords do not match.</small>\n          )\n        })\n      : this.setState({ cfpasswordError: null });\n  }\n  handleLoginEmail(event) {\n    this.setState({\n      emailLogin: event.target.value\n    });\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(event.target.value) === false\n      ? this.setState({\n          emailErrorLogin: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ emailErrorLogin: null });\n  }\n  handleLoginPassword(event) {\n    this.setState({\n      passwordLogin: event.target.value\n    });\n    event.target.value.length < 6\n      ? this.setState({\n          passwordErrorLogin: (\n            <small className=\"text-danger\">\n              You must enter a password of at least 6 characters.\n            </small>\n          )\n        })\n      : this.setState({ passwordErrorLogin: null });\n  }\n  handleLoginSubmit() {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(this.state.emailLogin) === false\n      ? this.setState({\n          emailErrorLogin: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ emailErrorLogin: null });\n    this.state.passwordLogin < 6\n      ? this.setState({\n          passwordErrorLogin: (\n            <small className=\"text-danger\">\n              You must enter a password of at least 6 characters.\n            </small>\n          )\n        })\n      : this.setState({ passwordErrorLogin: null });\n  }\n  handleTypeValidation() {\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    emailRex.test(this.state.type_email) === false\n      ? this.setState({\n          type_emailError: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ type_emailError: null });\n    this.state.type_text === \"\"\n      ? this.setState({\n          type_textError: (\n            <small className=\"text-danger\">Text is required.</small>\n          )\n        })\n      : this.setState({ type_textError: null });\n    var digitRex = /^\\d+$/;\n    digitRex.test(this.state.type_number) === false\n      ? this.setState({\n          type_numberError: (\n            <small className=\"text-danger\">\n              type_number has to be a number.\n            </small>\n          )\n        })\n      : this.setState({ type_numberError: null });\n    var urlRex = /[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/gi;\n    urlRex.test(this.state.type_url)\n      ? this.setState({ type_urlError: null })\n      : this.setState({\n          type_urlError: (\n            <small className=\"text-danger\">Must be a valid URL!</small>\n          )\n        });\n    this.state.type_source === \"\"\n      ? this.setState({\n          type_sourceError: (\n            <small className=\"text-danger\">IdSource is required</small>\n          )\n        })\n      : this.setState({ type_sourceError: null });\n    this.state.type_source === this.state.type_destination\n      ? this.setState({ type_destinationError: null })\n      : this.setState({\n          type_destinationError: (\n            <small className=\"text-danger\">IdSource mismatch!</small>\n          )\n        });\n  }\n  render() {\n    return (\n      <div className=\"main-content\">\n        <Grid fluid>\n          <Row>\n            <Col md={6}>\n              <form>\n                <Card\n                  title=\"Register Form\"\n                  content={\n                    <div>\n                      <FormGroup>\n                        <ControlLabel>\n                          Email adress: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"text\"\n                          name=\"email\"\n                          onChange={event => this.handleEmailChange(event)}\n                        />\n                        {this.state.emailError}\n                      </FormGroup>\n                      <FormGroup>\n                        <ControlLabel>\n                          Password: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"password\"\n                          name=\"password\"\n                          autoComplete=\"off\"\n                          onChange={event => this.handlePasswordChange(event)}\n                        />\n                        {this.state.passwordError}\n                      </FormGroup>\n                      <FormGroup>\n                        <ControlLabel>\n                          Confirm password: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"password\"\n                          name=\"cfpassword\"\n                          autoComplete=\"off\"\n                          onChange={event => this.handleCfPasswordChange(event)}\n                        />\n                        {this.state.cfpasswordError}\n                      </FormGroup>\n                      <div className=\"category\">\n                        <span className=\"star\">*</span> Required fields\n                      </div>\n                      <Button\n                        bsStyle=\"info\"\n                        fill\n                        pullRight\n                        onClick={this.handleRegisterSubmit.bind(this)}\n                      >\n                        Register\n                      </Button>\n                    </div>\n                  }\n                  legend={\n                    <div>\n                      <Checkbox number={1} label=\"Subscribe to newsletter\" />\n                    </div>\n                  }\n                />\n              </form>\n            </Col>\n            <Col md={6}>\n              <form>\n                <Card\n                  textCenter\n                  title=\"Login Form\"\n                  content={\n                    <div>\n                      <FormGroup>\n                        <ControlLabel>\n                          Email adress: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"text\"\n                          name=\"email\"\n                          onChange={event => this.handleLoginEmail(event)}\n                        />\n                        {this.state.emailErrorLogin}\n                      </FormGroup>\n                      <FormGroup>\n                        <ControlLabel>\n                          Password: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"password\"\n                          name=\"password\"\n                          autoComplete=\"off\"\n                          onChange={event => this.handleLoginPassword(event)}\n                        />\n                        {this.state.passwordErrorLogin}\n                      </FormGroup>\n                      <div className=\"category\">\n                        <span className=\"star\">*</span> Required fields\n                      </div>\n                    </div>\n                  }\n                  ftTextCenter\n                  legend={\n                    <Button\n                      bsStyle=\"info\"\n                      fill\n                      wd\n                      onClick={this.handleLoginSubmit.bind(this)}\n                    >\n                      Login\n                    </Button>\n                  }\n                />\n              </form>\n            </Col>\n            <Col md={12}>\n              <Form horizontal>\n                <Card\n                  title={<legend>Type Validation</legend>}\n                  content={\n                    <div>\n                      <FormGroup controlId=\"formHorizontalRequiredText\">\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          Required text\n                        </Col>\n                        <Col sm={6}>\n                          <FormControl\n                            type=\"text\"\n                            name=\"type_text\"\n                            onChange={event => {\n                              this.setState({ type_text: event.target.value });\n                              event.target.value === \"\"\n                                ? this.setState({\n                                    type_textError: (\n                                      <small className=\"text-danger\">\n                                        Text is required.\n                                      </small>\n                                    )\n                                  })\n                                : this.setState({ type_textError: null });\n                            }}\n                          />\n                          {this.state.type_textError}\n                        </Col>\n                      </FormGroup>\n                      <FormGroup controlId=\"formHorizontalEmail\">\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          Email\n                        </Col>\n                        <Col sm={6}>\n                          <FormControl\n                            type=\"email\"\n                            name=\"type_email\"\n                            onChange={event => {\n                              this.setState({ type_email: event.target.value });\n                              var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                              emailRex.test(event.target.value) === false\n                                ? this.setState({\n                                    type_emailError: (\n                                      <small className=\"text-danger\">\n                                        Email is required and format should be{\" \"}\n                                        <i>john@doe.com</i>.\n                                      </small>\n                                    )\n                                  })\n                                : this.setState({ type_emailError: null });\n                            }}\n                          />\n                          {this.state.type_emailError}\n                        </Col>\n                      </FormGroup>\n                      <FormGroup controlId=\"formHorizontalNumber\">\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          Number\n                        </Col>\n                        <Col sm={6}>\n                          <FormControl\n                            type=\"number\"\n                            name=\"type_number\"\n                            onChange={event => {\n                              this.setState({\n                                type_number: event.target.value\n                              });\n                              var digitRex = /^\\d+$/;\n                              digitRex.test(event.target.value) === false\n                                ? this.setState({\n                                    type_numberError: (\n                                      <small className=\"text-danger\">\n                                        type_number has to be a number.\n                                      </small>\n                                    )\n                                  })\n                                : this.setState({ type_numberError: null });\n                            }}\n                          />\n                          {this.state.type_numberError}\n                        </Col>\n                      </FormGroup>\n                      <FormGroup controlId=\"formHorizontalURL\">\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          URL\n                        </Col>\n                        <Col sm={6}>\n                          <FormControl\n                            type=\"text\"\n                            name=\"type_url\"\n                            onChange={event => {\n                              this.setState({ type_url: event.target.value });\n                              var urlRex = /[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/gi;\n                              urlRex.test(event.target.value)\n                                ? this.setState({ type_urlError: null })\n                                : this.setState({\n                                    type_urlError: (\n                                      <small className=\"text-danger\">\n                                        Must be a valid URL!\n                                      </small>\n                                    )\n                                  });\n                            }}\n                          />\n                          {this.state.type_urlError}\n                        </Col>\n                      </FormGroup>\n                      <FormGroup>\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          Equal to\n                        </Col>\n                        <Col sm={3}>\n                          <FormControl\n                            type=\"text\"\n                            name=\"type_source\"\n                            placeholder=\"idSource\"\n                            onChange={event => {\n                              this.setState({\n                                type_source: event.target.value\n                              });\n                              event.target.value === \"\"\n                                ? this.setState({\n                                    type_sourceError: (\n                                      <small className=\"text-danger\">\n                                        IdSource is required\n                                      </small>\n                                    )\n                                  })\n                                : this.setState({ type_sourceError: null });\n                              this.state.type_destination === event.target.value\n                                ? this.setState({ type_destinationError: null })\n                                : this.setState({\n                                    type_destinationError: (\n                                      <small className=\"text-danger\">\n                                        IdSource mismatch!\n                                      </small>\n                                    )\n                                  });\n                            }}\n                          />\n                          {this.state.type_sourceError}\n                        </Col>\n                        <Col sm={3}>\n                          <FormControl\n                            type=\"text\"\n                            name=\"type_destination\"\n                            placeholder=\"idDestination\"\n                            onChange={event => {\n                              this.setState({\n                                type_destination: event.target.value\n                              });\n                              this.state.type_source === event.target.value\n                                ? this.setState({ type_destinationError: null })\n                                : this.setState({\n                                    type_destinationError: (\n                                      <small className=\"text-danger\">\n                                        IdSource mismatch!\n                                      </small>\n                                    )\n                                  });\n                            }}\n                          />\n                          {this.state.type_destinationError}\n                        </Col>\n                      </FormGroup>\n                    </div>\n                  }\n                  ftTextCenter\n                  legend={\n                    <Button\n                      fill\n                      bsStyle=\"info\"\n                      onClick={this.handleTypeValidation.bind(this)}\n                    >\n                      Validate Inputs\n                    </Button>\n                  }\n                />\n              </Form>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ValidationForms;\n"]},"metadata":{},"sourceType":"module"}