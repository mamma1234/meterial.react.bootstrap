{"ast":null,"code":"var _jsxFileName = \"/Users/project/klnet.owner.weidong/front/src/views/Calendar.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\"; // react component used to create a calendar with events on it\n\nimport BigCalendar from \"react-big-calendar\"; // dependency plugin for react-big-calendar\n\nimport moment from \"moment\"; // react component used to create alerts\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Card from \"components/Card/Card.jsx\";\nimport { events } from \"variables/Variables.jsx\";\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: events,\n      alert: null\n    };\n    this.hideAlert = this.hideAlert.bind(this);\n  }\n\n  selectedEvent(event) {\n    alert(event.title);\n  }\n\n  addNewEventAlert(slotInfo) {\n    this.setState({\n      alert: /*#__PURE__*/React.createElement(SweetAlert, {\n        input: true,\n        showCancel: true,\n        style: {\n          display: \"block\",\n          marginTop: \"-100px\"\n        },\n        title: \"Input something\",\n        onConfirm: e => this.addNewEvent(e, slotInfo),\n        onCancel: () => this.hideAlert(),\n        confirmBtnBsStyle: \"info\",\n        cancelBtnBsStyle: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      })\n    });\n  }\n\n  addNewEvent(e, slotInfo) {\n    var newEvents = this.state.events;\n    newEvents.push({\n      title: e,\n      start: slotInfo.start,\n      end: slotInfo.end\n    });\n    this.setState({\n      alert: null,\n      events: newEvents\n    });\n  }\n\n  eventColors(event, start, end, isSelected) {\n    var backgroundColor = \"rbc-event-\";\n    event.color ? backgroundColor = backgroundColor + event.color : backgroundColor = backgroundColor + \"default\";\n    return {\n      className: backgroundColor\n    };\n  }\n\n  hideAlert() {\n    this.setState({\n      alert: null\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.state.alert, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      mdOffset: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      calendar: true,\n      content: /*#__PURE__*/React.createElement(BigCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: \"month\",\n        scrollToTime: new Date(1970, 1, 1, 6),\n        defaultDate: new Date(),\n        onSelectEvent: event => this.selectedEvent(event),\n        onSelectSlot: slotInfo => this.addNewEventAlert(slotInfo),\n        eventPropGetter: this.eventColors,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/project/klnet.owner.weidong/front/src/views/Calendar.jsx"],"names":["React","Component","Grid","Row","Col","BigCalendar","moment","SweetAlert","Card","events","localizer","momentLocalizer","Calendar","constructor","props","state","alert","hideAlert","bind","selectedEvent","event","title","addNewEventAlert","slotInfo","setState","display","marginTop","e","addNewEvent","newEvents","push","start","end","eventColors","isSelected","backgroundColor","color","className","render","Date"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// react component used to create a calendar with events on it\nimport BigCalendar from \"react-big-calendar\";\n// dependency plugin for react-big-calendar\nimport moment from \"moment\";\n// react component used to create alerts\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nimport Card from \"components/Card/Card.jsx\";\n\nimport { events } from \"variables/Variables.jsx\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: events,\n      alert: null\n    };\n    this.hideAlert = this.hideAlert.bind(this);\n  }\n  selectedEvent(event) {\n    alert(event.title);\n  }\n  addNewEventAlert(slotInfo) {\n    this.setState({\n      alert: (\n        <SweetAlert\n          input\n          showCancel\n          style={{ display: \"block\", marginTop: \"-100px\" }}\n          title=\"Input something\"\n          onConfirm={e => this.addNewEvent(e, slotInfo)}\n          onCancel={() => this.hideAlert()}\n          confirmBtnBsStyle=\"info\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      )\n    });\n  }\n  addNewEvent(e, slotInfo) {\n    var newEvents = this.state.events;\n    newEvents.push({\n      title: e,\n      start: slotInfo.start,\n      end: slotInfo.end\n    });\n    this.setState({\n      alert: null,\n      events: newEvents\n    });\n  }\n  eventColors(event, start, end, isSelected) {\n    var backgroundColor = \"rbc-event-\";\n    event.color\n      ? (backgroundColor = backgroundColor + event.color)\n      : (backgroundColor = backgroundColor + \"default\");\n    return {\n      className: backgroundColor\n    };\n  }\n  hideAlert() {\n    this.setState({\n      alert: null\n    });\n  }\n  render() {\n    return (\n      <div className=\"main-content\">\n        {this.state.alert}\n        <Grid fluid>\n          <Row>\n            <Col md={10} mdOffset={1}>\n              <Card\n                calendar\n                content={\n                  <BigCalendar\n                    selectable\n                    localizer={localizer}\n                    events={this.state.events}\n                    defaultView=\"month\"\n                    scrollToTime={new Date(1970, 1, 1, 6)}\n                    defaultDate={new Date()}\n                    onSelectEvent={event => this.selectedEvent(event)}\n                    onSelectSlot={slotInfo => this.addNewEventAlert(slotInfo)}\n                    eventPropGetter={this.eventColors}\n                  />\n                }\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}